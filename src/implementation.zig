const std = @import("std");

/// Math function implementations to use.
pub fn Implementation(comptime Element: type) type {
    return struct {
        const Vec2 = [2]Element;
        const Vec3 = [3]Element;
        const Vec4 = [4]Element;

        elem_abs: *const fn (a: Element) callconv(.Inline) Element,
        elem_add: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_approx_eq: *const fn (a: Element, b: Element, c: Element) callconv(.Inline) bool,
        elem_ceil: *const fn (a: Element) callconv(.Inline) Element,
        elem_cos: *const fn (a: Element) callconv(.Inline) Element,
        elem_cmpxchg_strong: *const fn (ptr: *Element, expected_value: Element, new_value: Element, success_order: std.builtin.AtomicOrder, fail_order: std.builtin.AtomicOrder) callconv(.Inline) ?Element,
        elem_cmpxchg_weak: *const fn (ptr: *Element, expected_value: Element, new_value: Element, success_order: std.builtin.AtomicOrder, fail_order: std.builtin.AtomicOrder) callconv(.Inline) ?Element,
        elem_div: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_eq: *const fn (a: Element, b: Element) callconv(.Inline) bool,
        elem_exp: *const fn (a: Element) callconv(.Inline) Element,
        elem_exp2: *const fn (a: Element) callconv(.Inline) Element,
        elem_floor: *const fn (a: Element) callconv(.Inline) Element,
        elem_from_float: *const fn (a: anytype) callconv(.Inline) Element,
        elem_from_int: *const fn (a: anytype) callconv(.Inline) Element,
        elem_ge: *const fn (a: Element, b: Element) callconv(.Inline) bool,
        elem_gt: *const fn (a: Element, b: Element) callconv(.Inline) bool,
        elem_le: *const fn (a: Element, b: Element) callconv(.Inline) bool,
        elem_log: *const fn (a: Element) callconv(.Inline) Element,
        elem_log2: *const fn (a: Element) callconv(.Inline) Element,
        elem_log10: *const fn (a: Element) callconv(.Inline) Element,
        elem_lt: *const fn (a: Element, b: Element) callconv(.Inline) bool,
        elem_mad: *const fn (a: Element, b: Element, c: Element) callconv(.Inline) Element,
        elem_max: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_min: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_mod: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_mul: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_ne: *const fn (a: Element, b: Element) callconv(.Inline) bool,
        elem_neg: *const fn (a: Element) callconv(.Inline) Element,
        elem_pow: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_rem: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_round: *const fn (a: Element) callconv(.Inline) Element,
        elem_sin: *const fn (a: Element) callconv(.Inline) Element,
        elem_sqrt: *const fn (a: Element) callconv(.Inline) Element,
        elem_sub: *const fn (a: Element, b: Element) callconv(.Inline) Element,
        elem_tan: *const fn (a: Element) callconv(.Inline) Element,
        elem_trunc: *const fn (a: Element) callconv(.Inline) Element,

        vec2_add: *const fn (a: Vec2, b: Vec2) callconv(.Inline) Vec2,
        vec2_approx_eq: *const fn (a: Vec2, b: Vec2, c: Element) callconv(.Inline) bool,
        vec2_div: *const fn (a: Vec2, b: Element) callconv(.Inline) Vec2,
        vec2_dot: *const fn (a: Vec2, b: Vec2) callconv(.Inline) Element,
        vec2_eq: *const fn (a: Vec2, b: Vec2) callconv(.Inline) bool,
        vec2_len: *const fn (a: Vec2) callconv(.Inline) Element,
        vec2_len_squared: *const fn (a: Vec2) callconv(.Inline) Element,
        vec2_mad: *const fn (a: Vec2, b: Element, c: Vec2) callconv(.Inline) Vec2,
        vec2_max: *const fn (a: Vec2, b: Vec2) callconv(.Inline) Vec2,
        vec2_min: *const fn (a: Vec2, b: Vec2) callconv(.Inline) Vec2,
        vec2_mul: *const fn (a: Vec2, b: Element) callconv(.Inline) Vec2,
        vec2_ne: *const fn (a: Vec2, b: Vec2) callconv(.Inline) bool,
        vec2_neg: *const fn (a: Vec2) callconv(.Inline) Element,
        vec2_normalize: *const fn (a: Vec2) callconv(.Inline) Vec2,
        vec2_rem: *const fn (a: Vec2, b: Element) callconv(.Inline) Vec2,
        vec2_sub: *const fn (a: Vec2, b: Vec2) callconv(.Inline) Vec2,

        vec3_add: *const fn (a: Vec3, b: Vec3) callconv(.Inline) Vec3,
        vec3_approx_eq: *const fn (a: Vec3, b: Vec3, c: Element) callconv(.Inline) bool,
        vec3_cross: *const fn (a: Vec3, b: Vec3) callconv(.Inline) Vec3,
        vec3_div: *const fn (a: Vec3, b: Element) callconv(.Inline) Vec3,
        vec3_dot: *const fn (a: Vec3, b: Vec3) callconv(.Inline) Element,
        vec3_eq: *const fn (a: Vec3, b: Vec3) callconv(.Inline) bool,
        vec3_len: *const fn (a: Vec3) callconv(.Inline) Element,
        vec3_len_squared: *const fn (a: Vec3) callconv(.Inline) Element,
        vec3_mad: *const fn (a: Vec3, b: Element, c: Vec3) callconv(.Inline) Vec3,
        vec3_max: *const fn (a: Vec3, b: Vec3) callconv(.Inline) Vec3,
        vec3_min: *const fn (a: Vec3, b: Vec3) callconv(.Inline) Vec3,
        vec3_mul: *const fn (a: Vec3, b: Element) callconv(.Inline) Vec3,
        vec3_ne: *const fn (a: Vec3, b: Vec3) callconv(.Inline) bool,
        vec3_neg: *const fn (a: Vec3) callconv(.Inline) Vec3,
        vec3_normalize: *const fn (a: Vec3) callconv(.Inline) Vec3,
        vec3_rem: *const fn (a: Vec3, b: Element) callconv(.Inline) Vec3,
        vec3_sub: *const fn (a: Vec3, b: Vec3) callconv(.Inline) Vec3,

        vec4_add: *const fn (a: Vec4, b: Vec4) callconv(.Inline) Vec4,
        vec4_approx_eq: *const fn (a: Vec4, b: Vec4, c: Element) callconv(.Inline) bool,
        vec4_div: *const fn (a: Vec4, b: Element) callconv(.Inline) Vec4,
        vec4_dot: *const fn (a: Vec4, b: Vec4) callconv(.Inline) Element,
        vec4_eq: *const fn (a: Vec4, b: Vec4) callconv(.Inline) bool,
        vec4_len: *const fn (a: Vec4) callconv(.Inline) Element,
        vec4_len_squared: *const fn (a: Vec4) callconv(.Inline) Element,
        vec4_mad: *const fn (a: Vec4, b: Element, c: Vec4) callconv(.Inline) Vec4,
        vec4_max: *const fn (a: Vec4, b: Vec4) callconv(.Inline) Vec4,
        vec4_min: *const fn (a: Vec4, b: Vec4) callconv(.Inline) Vec4,
        vec4_mul: *const fn (a: Vec4, b: Element) callconv(.Inline) Vec4,
        vec4_ne: *const fn (a: Vec4, b: Vec4) callconv(.Inline) bool,
        vec4_neg: *const fn (a: Vec4) callconv(.Inline) Vec4,
        vec4_normalize: *const fn (a: Vec4) callconv(.Inline) Vec4,
        vec4_rem: *const fn (a: Vec4, b: Element) callconv(.Inline) Vec4,
        vec4_sub: *const fn (a: Vec4, b: Vec4) callconv(.Inline) Vec4,
    };
}
